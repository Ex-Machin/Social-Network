{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/FormsControl/FormControls.module.css","components/FormsControl/FormsControl.tsx","utils/validators/validators.ts","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfielDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","FromControl","meta","touched","error","children","hasError","className","styles","TextArea","input","restProps","Input","createField","placeholder","name","validators","component","validate","required","value","maxLengthCreator","maxLenght","length","undefined","Post","message","likeCount","s","posts","item","src","alt","maxLength10","LoginReduxForm","reduxForm","form","handleSubmit","Field","type","MyPosts","postsData","addPost","postBlock","values","post","reverse","map","id","MyPostsContainer","connect","state","profilePage","newPostText","actions","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","onDoubleClick","ProfielDataFormReduxForm","profile","Object","keys","contacts","key","contact","ProfileData","isOwner","goEditMode","descriptionBlock","onClick","fullName","lookingForAJob","aboutMe","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","style","width","height","photos","large","userPhoto","target","files","initialValues","formData","then","Profile","content","ProfileContainer","userId","params","authorisedUserId","navigate","replace","getUser","getStatus","refreshProfile","prevState","snapshot","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/4.7641ae94.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControls_form-control__2LeGj\",\"error\":\"FormControls_error__1Z7Z-\",\"form-summary-error\":\"FormControls_form-summary-error__2KQQc\"};","import React from 'react';\r\nimport { Field, WrappedFieldProps } from \"redux-form\";\r\nimport { FieldValidatorType } from \"../../utils/validators/validators\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\ninterface FromControlProps extends WrappedFieldProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst FromControl: React.FC<FromControlProps> = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n\r\n  return (\r\n    <div className={styles[\"form-control\"] + \" \" + (hasError && styles.error)}>\r\n      <div>{children}</div>\r\n      <div>{hasError && <span> {error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport const TextArea: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props\r\n  return (\r\n    <FromControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FromControl>\r\n  );\r\n};\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props\r\n  return (\r\n    <FromControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FromControl>\r\n  );\r\n};\r\n\r\nexport function createField<T extends string | undefined>(placeholder: string | undefined,\r\n  name: T,\r\n  validators: Array<FieldValidatorType>,\r\n  component: React.FC<WrappedFieldProps>,\r\n  props = {},\r\n  text = \"\") {\r\n  return (\r\n\r\n    (\r\n      <div>\r\n        <Field placeholder={placeholder} name={name}\r\n          validate={validators}\r\n          component={component}\r\n          {...props} />\r\n      </div>\r\n    )\r\n  )\r\n}","export type FieldValidatorType = (value:string) => string | undefined  \r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n  if (!!value) {\r\n    return undefined;\r\n  }\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLenght: number): FieldValidatorType => (value) => {\r\n  return  value.length > maxLenght ? `Max length is ${maxLenght} symbols` : undefined\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2NLJx\",\"contact\":\"ProfileInfo_contact__3lURy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1An3v\",\"postBlock\":\"MyPosts_postBlock__3bQLb\",\"posts\":\"MyPosts_posts__17fwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1hx2L\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = ({ message, likeCount }) => {\r\n  return (\r\n    <div className={s.posts}>\r\n      <div className={s.item}>\r\n        <img\r\n          src=\"https://proslang.ru/wp-content/uploads/2019/03/avatarka_1-300x300.jpg\"\r\n          alt=\"\"\r\n        />\r\n        {message}\r\n      </div>\r\n      <div>\r\n        <span>likes: {likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, Form, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { TextArea } from \"../../FormsControl/FormsControl\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostForm = ({handleSubmit}) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Field\r\n        name=\"post\"\r\n        component={TextArea}\r\n        placeholder={\"Post a message\"}\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <button type=\"submit\">Add Post</button>\r\n      <button>Remove</button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"posts\",\r\n})(MyPostForm);\r\n\r\nconst MyPosts = ({ postsData, addPost }) => {\r\n\r\n  const onSubmit = (values) => {\r\n    addPost(values.post);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postBlock}>\r\n      <h3>My Posts</h3>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n      <div className={s.posts}>\r\n        {[...postsData].reverse().map((item) => {\r\n          return (\r\n            <Post\r\n              message={item.message}\r\n              likeCount={item.likeCount}\r\n              key={item.id}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, actions.addPost)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n  \r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n  return (\r\n    <div>\r\n      {editMode ? (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            onChange={(e) => setStatus(e.currentTarget.value)}\r\n            value={status}\r\n            onBlur={deactivateEditMode}\r\n          ></input>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <span onDoubleClick={() => setEditMode(true)}>\r\n            {status || \"--\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input, TextArea } from \"../../FormsControl/FormsControl\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport styles from \"../../FormsControl/FormControls.module.css\";\r\n\r\nconst ProfielDataForm = ({ profile, handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n      {error && <div className={styles[\"form-summary-error\"]}>{error}</div>}\r\n      <div>\r\n        <b>Full name</b> :\r\n        <Field placeholder=\"Full name\" name=\"fullName\" component={Input} />\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job </b>\r\n        <Field name=\"lookingForAJob\" component={Input} type={\"checkbox\"} />\r\n      </div>\r\n      <div>\r\n        <b>Skills </b>\r\n        <Field\r\n          placeholder=\"My professionals skills\"\r\n          name=\"lookingForAJobDescription\"\r\n          component={TextArea}\r\n        />\r\n      </div>\r\n      <div>About Me</div>\r\n      <Field name=\"aboutMe\" component={Input} />\r\n      <div>\r\n        <b>Contacts : </b>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className={s.contact}>\r\n              <b>{key}</b>\r\n              <Field name={\"contacts.\" + key} component={Input} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfielDataFormReduxForm = reduxForm({ form: \"editProfile\" })(\r\n  ProfielDataForm\r\n);\r\n\r\nexport default ProfielDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport ProfielDataForm from \"./ProfielDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit =  (formData) => {\r\n   saveProfile(formData).then(() => setEditMode(false));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        style={{ width: \"200px\", height: \"200px\" }}\r\n        src={profile.photos.large || userPhoto}\r\n        alt=\"\"\r\n      />\r\n      {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n      {editMode ? (\r\n        <ProfielDataForm\r\n          initialValues={profile}\r\n          profile={profile}\r\n          onSubmit={onSubmit}\r\n        />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          goEditMode={() => {\r\n            setEditMode(true);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goEditMode }) => {\r\n  return (\r\n    <div className={s.descriptionBlock}>\r\n      {isOwner && <button onClick={goEditMode}>edit</button>}\r\n      <div>{profile.fullName}</div>\r\n      <div>\r\n        <b>Looking for a job </b>\r\n        {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n      </div>\r\n      <div>\r\n        About me <b>{profile.aboutMe}</b>\r\n      </div>\r\n      <div>\r\n        Job Description\r\n        <b>\r\n          {profile.lookingForAJob ? profile.lookingForAJobDescription : null}\r\n        </b>\r\n      </div>\r\n      <div>\r\n        <b>Contacts : </b>{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../hoc/withRouter\";\r\nimport {\r\n  getStatus,\r\n  getUser,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile\r\n} from \"../../redux/profileReducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.params.id;\r\n    if (!userId) {\r\n      userId = this.props.authorisedUserId;\r\n      if (!userId) {\r\n        this.props.navigate(\"/login\", { replace: true });\r\n      }\r\n    }\r\n    if (userId) {\r\n      this.props.getUser(userId);\r\n      this.props.getStatus(userId);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.params.id !== prevProps.params.id) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.params.id}\r\n        profile={this.props.profile}\r\n        savePhoto={this.props.savePhoto}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    getUser,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  })\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}