{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Music/Music.jsx","components/NavBar/NavBar.jsx","components/NavBar/NavBarContainer.js","components/News/News.jsx","components/Settings/Settings.jsx","redux/user-selector.ts","api/users-api.ts","utils/objects-helper.ts","redux/usersReducer.ts","components/Paginator/Paginator.tsx","components/Users/User.js","components/Users/Users.tsx","components/Users/UsersContainer.tsx","redux/app-reducer.tsx","App.js","redux/sidebarReducer.ts","redux/redux-store.ts","index.js","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","assets/images/loading.svg","components/Preloader/Preloader.js","components/Paginator/Paginator.module.css","components/Header/Header.module.css","api/profile-api.ts","redux/profileReducer.ts","api/api.ts","assets/images/avatar.png","hoc/withRouter.js","redux/dialogsReducer.ts","components/Users/users.module.css"],"names":["module","exports","Header","props","className","s","header","src","alt","isAuth","login","onClick","logout","to","loginBlock","HeaderContainer","this","React","Component","connect","state","auth","profile","profilePage","Music","NavBar","friendsData","nav","isActive","active","item","friendsBlock","map","friendsImage","name","id","NavBarContainer","sidebar","News","Settings","getUsersSelector","createSelector","usersPage","users","filter","u","getPageSizeSelector","pageSize","getTotalUsersCountSelector","totalUsersCount","getCurrentPageSelector","currentPage","getIsFetchinSelector","isFetching","getFollowingInProgressSelector","followingInProgress","usersAPI","getUsers","page","instance","get","then","response","data","follow","post","unfollow","delete","updateObjectInArray","items","itemId","objectPropertyName","newObjectProps","user","initialState","actions","userId","type","_followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","followed","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","cn","selectedPage","pageNumber","e","User","photos","small","avatarMock","userPhoto","disabled","some","status","Users","UsersContainer","pageTitle","Preloader","compose","bind","totalCount","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","Login","App","catchAllUnhandledErrors","promiseRejectionValue","console","warn","initialize","window","addEventListener","removeEventListener","init","fallback","path","element","withRouter","app","promise","getCurrentUser","Promise","all","sidebarReducer","rootReducer","combineReducers","profileReducer","dialogsPage","dialogsReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","render","StrictMode","document","getElementById","authAPI","email","password","rememberMe","captcha","securityAPI","res","captchaUrl","payload","ResultCodeEnum","Succes","ResultCodeForCaptcha","CaptchaIsRequired","getCaptchaUrl","message","messages","length","stopSubmit","_error","url","loading","profileAPI","put","photo","formData","FormData","append","headers","posts","likeCount","addPost","setUserProfile","setStatus","deletePost","savePhotoSuccess","lowerFirstCharakter","string","charAt","toLowerCase","slice","getUser","getStatus","updateStatus","savePhoto","file","saveProfile","getState","Error","regex","string1","split","reject","newPost","likeCoint","axios","create","withCredentials","baseURL","process","REACT_APP_API_KEY","location","useLocation","navigate","useNavigate","params","useParams","dialogs","sendMessageCreator","newMessageBody"],"mappings":"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","file":"static/js/main.87c973f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__VpM9K\",\"friendsBlock\":\"NavBar_friendsBlock__1hVLM\",\"friendsImage\":\"NavBar_friendsImage__3_Goz\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/RPC-JP_Logo.png\"\r\n        alt=\"\"\r\n      />\r\n      {props.isAuth ? (\r\n        <div>\r\n          {props.login} <button onClick={props.logout}>Logout</button>\r\n        </div>\r\n      ) : (\r\n        <Link to={\"/login\"} className={s.loginBlock}>\r\n          Login\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  componentDidMount() {\r\n  //  this.props.getCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n  profile: state.profilePage.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(\r\n  HeaderContainer\r\n);\r\n","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n  return (\r\n  <div>\r\n      Music\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport s from \"./NavBar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ friendsData }) => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div>\r\n        <NavLink\r\n          to=\"/profile\"\r\n          className={(isActive) => (isActive ? s.active : s.item)}\r\n        >\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink\r\n          to=\"/dialogs\"\r\n          className={(isActive) => (isActive ? s.active : s.item)}\r\n        >\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink\r\n          to=\"/news\"\r\n          className={(isActive) => (isActive ? s.active : s.item)}\r\n        >\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink\r\n          to=\"/users\"\r\n          className={(isActive) => (isActive ? s.active : s.item)}\r\n        >\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink\r\n          to=\"/music\"\r\n          className={(isActive) => (isActive ? s.active : s.item)}\r\n        >\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink\r\n          to=\"/settings\"\r\n          className={(isActive) => (isActive ? s.active : s.item)}\r\n        >\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        Friends\r\n        <div className={s.friendsBlock}>\r\n          {friendsData.map((item) => {\r\n            return (\r\n              <div key={item.id}>\r\n                <img src={item.src} alt=\"\" className={s.friendsImage}></img>\r\n                <div>{item.name}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { connect } from \"react-redux\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    friendsData: state.sidebar,\r\n  };\r\n};\r\n\r\nconst NavBarContainer = connect(mapStateToProps)(NavBar);\r\n\r\nexport default NavBarContainer;\r\n","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\nconst News = () => {\r\n  return (\r\n  <div>\r\n      News\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from 'react';\r\n//import s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n  return (\r\n  <div>\r\n      Settings\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n  return users.filter((u) => true);\r\n});\r\n\r\nexport const getPageSizeSelector = (state: AppStateType) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCountSelector = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPageSelector = (state: AppStateType) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetchinSelector = (state: AppStateType) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgressSelector = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import { GetItemsType, instance, APIResponseType } from \"./api\";\r\nimport { UserType } from \"../types/types\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(page = 1, pageSize = 5) {\r\n        return instance\r\n            .get<GetItemsType<UserType>>(`users?page=${page}&count=${pageSize}`)\r\n            .then((response) => response.data);\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<APIResponseType>(`follow/${id}`).then((response) => response.data);\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<APIResponseType>(`follow/${id}`).then((response) => response.data);\r\n    },\r\n};","export const updateObjectInArray = (\r\n  items: any,\r\n  itemId: any,\r\n  objectPropertyName: any,\r\n  newObjectProps: any\r\n) => {\r\n  return items.map((user: any) => {\r\n    if (user[objectPropertyName] === itemId) {\r\n      return { ...user, ...newObjectProps };\r\n    }\r\n    return user;\r\n  });\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { UserType } from \"../types/types\";\r\nimport { updateObjectInArray } from \"../utils/objects-helper\";\r\nimport { BaseThunkType } from \"./app-reducer\";\r\nimport { InferActionsTypes } from \"./redux-store\";\r\n\r\nlet initialState = {\r\n  users: [] as Array<UserType>,\r\n  pageSize: 10 as number,\r\n  totalUsersCount: 0 as number,\r\n  currentPage: 1 as number,\r\n  isFetching: false as boolean,\r\n  followingInProgress: [] as Array<number>, // array of users id\r\n};\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case \"users/FOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case \"users/UNFOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n\r\n    case \"users/SET_USERS\": {\r\n      return { ...state, users: action.users };\r\n    }\r\n    case \"users/SET_CURRENT_PAGE\": {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case \"users/SET_TOTAL_USERS_COUNT\": {\r\n      return { ...state, totalUsersCount: action.totalUsersCount };\r\n    }\r\n    case \"users/TOGGLE_IS_FETCHING\": {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case \"users/TOGGLE_IS_FOLLOWING_PROGRESS\": {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const actions = {\r\n  followSuccess:(userId: number) => ({type: \"users/FOLLOW\", userId} as const),\r\n  unfollowSuccess:(userId: number) => ({type: \"users/UNFOLLOW\", userId} as const),\r\n  setUsers:(users: Array<UserType>) => ({type: \"users/SET_USERS\", users} as const),\r\n  setCurrentPage:(currentPage: number) => ({type: \"users/SET_CURRENT_PAGE\", currentPage} as const),\r\n  setTotalUsersCount:(totalUsersCount: number)=> ({type: \"users/SET_TOTAL_USERS_COUNT\", totalUsersCount} as const),\r\n  toggleIsFetching:(isFetching: boolean) => ({type: \"users/TOGGLE_IS_FETCHING\", isFetching} as const),\r\n  toggleFollowingProgress:(isFetching: boolean, userId: number) => ({type: \"users/TOGGLE_IS_FOLLOWING_PROGRESS\", isFetching, userId} as const),\r\n}\r\n\r\nexport const getUsers = (\r\n  page: number,\r\n  pageSize: number\r\n):ThunkType=> {\r\n  return async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true));\r\n    dispatch(actions.setCurrentPage(page));\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(actions.toggleIsFetching(false));\r\n    dispatch(actions.setUsers(data.items));\r\n    dispatch(actions.setTotalUsersCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst _followUnfollowFlow = async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  id: number,\r\n  apiMethod: any,\r\n  actionCreator: (id: number) => ActionsTypes\r\n) => {\r\n  dispatch(actions.toggleFollowingProgress(true, id));\r\n  const data = await apiMethod(id);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(id));\r\n  }\r\n  dispatch(actions.toggleFollowingProgress(false, id));\r\n};\r\n\r\nexport const follow = (id: number):ThunkType => {\r\n  return async (dispatch) => {\r\n    _followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      usersAPI.follow.bind(usersAPI),\r\n      actions.followSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport const unfollow = (id: number):ThunkType => {\r\n  return async (dispatch) => {\r\n    _followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      usersAPI.unfollow.bind(usersAPI),\r\n      actions.unfollowSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype InitialStateType = typeof initialState;","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChanged: (pageNumber: number) => void;\r\n  portionSize?: number;\r\n};\r\n\r\nlet Paginator: React.FC<PropsType> = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  onPageChanged,\r\n  currentPage,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages: Array<number> = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p,\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport avatarMock from \"../../assets/images/avatar.png\";\r\nimport styles from \"./users.module.css\";\r\n\r\nconst User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  return (\r\n    <div>\r\n      <div key={user.id}>\r\n        <span>\r\n          <div>\r\n            <NavLink to={\"/profile/\" + user.id}>\r\n              <img\r\n                src={user.photos.small || avatarMock}\r\n                alt=\"\"\r\n                className={styles.userPhoto}\r\n              />\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            {user.followed ? (\r\n              <button\r\n                disabled={followingInProgress.some((id) => id === user.id)}\r\n                onClick={() => {\r\n                  unfollow(user.id);\r\n                }}\r\n              >\r\n                Unfollow\r\n              </button>\r\n            ) : (\r\n              <button\r\n                disabled={followingInProgress.some((id) => id === user.id)}\r\n                onClick={() => {\r\n                  follow(user.id);\r\n                }}\r\n              >\r\n                Follow\r\n              </button>\r\n            )}\r\n          </div>\r\n        </span>\r\n        <span>\r\n          <span>\r\n            <div>{user.name} </div>\r\n            <div>{user.status}</div>\r\n          </span>\r\n          <span>\r\n            {/* <div>{user.location.country}</div> \r\n              <div>{user.location.city}</div> */}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { UserType } from \"../../types/types\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\ntype PropsType = {\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChanged: (pageNumber: number) => void;\r\n  totalUsersCount: number\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n  unfollow:  (id: number) => void\r\n  follow: (id: number) => void\r\n};\r\n\r\nconst Users: React.FC<PropsType> = ({\r\n  currentPage,\r\n  onPageChanged,\r\n  totalUsersCount,\r\n  pageSize,\r\n  users,\r\n  followingInProgress,\r\n  unfollow,\r\n  follow,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      {users.map((user) => {\r\n        return (\r\n          <User\r\n            key={user.id}\r\n            user={user}\r\n            followingInProgress={followingInProgress}\r\n            unfollow={unfollow}\r\n            follow={follow}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport {\r\n  getCurrentPageSelector,\r\n  getFollowingInProgressSelector, getIsFetchinSelector, getPageSizeSelector,\r\n  getTotalUsersCountSelector,\r\n  getUsersSelector\r\n} from \"../../redux/user-selector\";\r\nimport {\r\n  follow,\r\n  getUsers,\r\n  unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport { UserType } from \"../../types/types\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Users from \"./Users\";\r\n\r\ntype OwnPropsType = {\r\n  pageTitle: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n  currentPage: number\r\n  pageSize: number\r\n  isFetching: boolean\r\n  totalUsersCount: number\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (page: number) => {\r\n    const { pageSize } = this.props;\r\n    this.props.getUsers(page, pageSize);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>{this.props.pageTitle}</h2>\r\n        {this.props.isFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <Users\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            followingInProgress={this.props.followingInProgress}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsersSelector(state),\r\n    pageSize: getPageSizeSelector(state),\r\n    totalUsersCount: getTotalUsersCountSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    isFetching: getIsFetchinSelector(state),\r\n    followingInProgress: getFollowingInProgressSelector(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  //\r\n  connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    getUsers,\r\n  })\r\n)(UsersContainer);\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { getCurrentUser } from \"./auth-reducer\";\r\nimport { AppStateType, InferActionsTypes } from \"./redux-store\";\r\nimport { Action } from \"redux\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nexport const actions = {\r\n  initialize: () => ({type: \"app/SET_INIT\"})\r\n}\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): typeof initialState => {\r\n  switch (action.type) {\r\n    case \"app/SET_INIT\":\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initialize = () => {\r\n  return (dispatch: any) => {\r\n    const promise = dispatch(getCurrentUser());\r\n    Promise.all([promise]).then(() => {\r\n      dispatch(actions.initialize());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n","import React, { Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport \"./App.css\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Music from \"./components/Music/Music\";\r\nimport NavBarContainer from \"./components/NavBar/NavBarContainer\";\r\nimport News from \"./components/News/News\";\r\nimport Preloader from \"./components/Preloader/Preloader\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport { withRouter } from \"./hoc/withRouter\";\r\nimport { initialize } from \"./redux/app-reducer\";\r\nconst DialogsContainer = React.lazy(() =>\r\n  import(\"./components/Dialogs/DialogsContainer\")\r\n);\r\nconst ProfileContainer = React.lazy(() =>\r\n  import(\"./components/Profile/ProfileContainer\")\r\n);\r\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\r\n\r\nclass App extends React.Component {\r\n\r\n  catchAllUnhandledErrors = (promiseRejectionValue) =>{\r\n    console.warn(promiseRejectionValue);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initialize();\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"unhandledrejection\",\r\n      this.catchAllUnhandledErrors\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.init) {\r\n      return <Preloader />;\r\n    } else\r\n      return (\r\n        <div className=\"app-wrapper\">\r\n          <HeaderContainer />\r\n          <NavBarContainer />\r\n          <div className=\"app-wrapper-content\">\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <Routes>\r\n                <Route path=\"/\" element={<ProfileContainer />} />\r\n                <Route path=\"/dialogs\" element={<DialogsContainer />} />\r\n                <Route path=\"/profile/:id\" element={<ProfileContainer />} />\r\n                <Route path=\"/profile\" element={<ProfileContainer />} />\r\n                <Route path=\"/news\" element={<News />} />\r\n                <Route path=\"/music\" element={<Music />} />\r\n                <Route path=\"/settings\" element={<Settings />} />\r\n                <Route\r\n                  path=\"/users\"\r\n                  element={<UsersContainer pageTitle=\"Каничива\" />}\r\n                />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"*\" element={<div>Not Found</div>} />\r\n              </Routes>\r\n            </Suspense>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  init: state.app.initialized,\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initialize })\r\n)(App);\r\n","export type InitialStateType = typeof initialState \r\n\r\ntype SideProfileType = {\r\n  id: number\r\n  name: string\r\n  src: string\r\n}\r\n\r\nlet initialState = [\r\n  {\r\n    id: 1,\r\n    name: \"Lika\",\r\n    src: \"https://i.quotev.com/img/q/u/20/8/16/hzedqa72l2_l.jpg\",\r\n  } as SideProfileType,\r\n  {\r\n    id: 2,\r\n    name: \"Kair\",\r\n    src: \"https://i.quotev.com/img/q/u/20/8/16/hzedqa72l2_l.jpg\",\r\n  } as SideProfileType,\r\n  {\r\n    id: 3,\r\n    name: \"Yulia\",\r\n    src: \"https://i.quotev.com/img/q/u/20/8/16/hzedqa72l2_l.jpg\",\r\n  } as SideProfileType,\r\n];\r\n\r\nconst sidebarReducer = (state = initialState): InitialStateType => {\r\n  return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesTypes<T>>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { instance, APIResponseType, ResultCodeEnum, ResultCodeForCaptcha } from \"./api\";\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n};\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n};\r\n\r\nexport const authAPI = {\r\n    getCurrentUser() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: string) {\r\n        return instance\r\n            .post<APIResponseType<LoginResponseDataType, ResultCodeEnum | ResultCodeForCaptcha>>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n};","import { instance } from \"./api\";\r\n\r\ntype getCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl: () => instance.get<getCaptchaUrlResponseType>(`security/get-captcha-url`).then((res) => res.data)\r\n};","import { FormAction, stopSubmit } from \"redux-form\";\r\nimport { ResultCodeEnum, ResultCodeForCaptcha } from \"../api/api\";\r\nimport { authAPI } from \"../api/auth-api\";\r\nimport { securityAPI } from \"../api/security-api\";\r\nimport { BaseThunkType } from \"./app-reducer\";\r\nimport { InferActionsTypes } from \"./redux-store\";\r\n\r\nlet initialState = {\r\n  userId: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isAuth: false as boolean | null,\r\n  captchaUrl: null as string | null, // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): InitiaStateType => {\r\n  switch (action.type) {\r\n    case \"auth/GET_CAPTCHA_URL_SUCCEESS\":\r\n    case \"auth/SET_USER_DATA\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  setAuthUserData: (email: string | null, userId: number | null, login: string | null, isAuth: boolean) => ({ type: \"auth/SET_USER_DATA\", payload: { email, userId, login, isAuth } }),\r\n  getCaptchaUrlSucces: (captchaUrl: string) => ({ type: \"auth/GET_CAPTCHA_URL_SUCCEESS\", payload: { captchaUrl } })\r\n}\r\n\r\nexport const getCurrentUser = (): ThunkType => async (dispatch) => {\r\n  let response = await authAPI.getCurrentUser();\r\n\r\n  if (response.resultCode === ResultCodeEnum.Succes) {\r\n    let { email, id, login } = response.data;\r\n    dispatch(actions.setAuthUserData(email, id, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n  const data = await authAPI.login(email, password, rememberMe, captcha);\r\n  if (data.resultCode === ResultCodeEnum.Succes) {\r\n\r\n    // success, get auth data\r\n    dispatch(getCurrentUser());\r\n  } else {\r\n    if (data.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    const message = data.messages.length > 0 ? data.messages[0] : \"Unhandled error\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n  const data = await securityAPI.getCaptchaUrl();\r\n\r\n  dispatch(actions.getCaptchaUrlSucces(data.url))\r\n\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n  const data = await authAPI.logout();\r\n  if (data.resultCode === ResultCodeEnum.Succes) {\r\n    dispatch(actions.setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n\r\nexport type InitiaStateType = typeof initialState;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>","export default __webpack_public_path__ + \"static/media/loading.7aee2325.svg\";","import React from 'react'\r\nimport loading from \"../../assets/images/loading.svg\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div>\r\n      <img src={loading} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1aIB8\",\"pageNumber\":\"Paginator_pageNumber__3yLrv\",\"selectedPage\":\"Paginator_selectedPage__2fifk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VCmg\",\"loginBlock\":\"Header_loginBlock__3G6BQ\"};","import { instance, APIResponseType } from \"./api\";\r\nimport { PhotosType, ProfileType } from \"../types/types\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUser: (id: number) => instance.get<ProfileType>(`profile/${id}`).then((res) => res.data),\r\n    getStatus: (id: number) => instance.get<string>(`profile/status/${id}`).then((res) => res.data),\r\n    updateStatus: (status: string) => instance.put<APIResponseType>(\"profile/status\", { status }).then((res) => res.data),\r\n    savePhoto: (photo: File) => {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(\"profile/photo\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then((res) => res.data);\r\n    },\r\n    saveProfile: (profile: ProfileType) => instance.put<APIResponseType>(\"profile\", profile).then((res) => res.data)\r\n};\r\n","import { FormAction, stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { PhotosType, PostType, ProfileType } from \"../types/types\";\r\nimport { BaseThunkType } from \"./app-reducer\";\r\nimport { InferActionsTypes } from \"./redux-store\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Bye World\", likeCount: \"12\" },\r\n    { id: 2, message: \"Abrakadabra\", likeCount: \"11\" },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: \"\",\r\n  post: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case \"profile/ADD-POST\":\r\n      let newPost = {\r\n        id: state.posts.length + 1,\r\n        message: action.payload,\r\n        likeCoint: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      };\r\n    case \"profile/SET_USER_PROFILE\": {\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n      };\r\n    }\r\n    case \"profile/SET_STATUS\": {\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    }\r\n    case \"profile/DELETE_POST\": {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== action.payload),\r\n      };\r\n    }\r\n    case \"profile/SAVE_PHOTO_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.payload },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  addPost: (post: string) => ({type: \"profile/ADD-POST\", payload: post}),\r\n  setUserProfile: (profile: ProfileType) => ({type: \"profile/SET_USER_PROFILE\", payload: profile}),\r\n  setStatus: (status: string) => ({type: \"profile/SET_STATUS\", payload: status}),\r\n  deletePost: (id: number) => ({type: \"profile/DELETE_POST\", payload: id}),\r\n  savePhotoSuccess: (photos: PhotosType) => ({type: \"profile/SAVE_PHOTO_SUCCESS\", payload: photos}),\r\n} \r\n\r\nfunction lowerFirstCharakter(string: string): string {\r\n  return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n\r\nexport const getUser = (id: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    profileAPI.getUser(id).then((data) => {\r\n      dispatch(actions.setUserProfile(data));\r\n    });\r\n  };\r\n};\r\n\r\nexport const getStatus = (id: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.getStatus(id);\r\n\r\n    dispatch(actions.setStatus(data));\r\n  };\r\n};\r\n\r\nexport const updateStatus = (status: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await profileAPI.updateStatus(status);\r\n\r\n      if (data.resultCode === 0) {\r\n        dispatch(actions.setStatus(status));\r\n      }\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const savePhoto = (file: File): ThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.savePhoto(file);\r\n    if (data.resultCode === 0) {\r\n      dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const data = await profileAPI.saveProfile(profile);\r\n    if (data.resultCode === 0) {\r\n      if (userId != null) {\r\n        dispatch(getUser(userId));\r\n      } else {\r\n        throw new Error(\"usedId can't be null\")\r\n      }\r\n    } else {\r\n      const regex = /\\(([^\\)]+)/;\r\n      const string1 = data.messages[0].split(regex);\r\n      const string = string1[1].split(\"->\");\r\n      if (string[1]) {\r\n        dispatch(\r\n          stopSubmit(\"editProfile\", {\r\n            [lowerFirstCharakter(string[0])]: {\r\n              [lowerFirstCharakter(string[1])]: data.messages[0],\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          stopSubmit(\"editProfile\", {\r\n            [lowerFirstCharakter(string[0])]: data.messages[0],\r\n          })\r\n        );\r\n      }\r\n      return Promise.reject(data.messages[0]);\r\n    }\r\n  };\r\n};\r\nexport default profileReducer;\r\n\r\nexport type initialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": process.env.REACT_APP_API_KEY as string,\r\n  },\r\n});\r\n\r\nexport type GetItemsType<T> = {\r\n  items: Array<T>\r\n  totalCount: number\r\n  error: string | null\r\n}\r\n\r\nexport enum ResultCodeEnum {\r\n  Succes = 0,\r\n  Error = 1,\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n  CaptchaIsRequired = 10,\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodeEnum> = {\r\n  data: D\r\n  messages: Array<string>\r\n  resultCode: RC\r\n}","export default __webpack_public_path__ + \"static/media/avatar.d76e1693.png\";","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nexport function withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        location={location}\r\n        navigate={navigate}\r\n        params={params}\r\n      />\r\n    );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n","import { InferActionsTypes } from \"./redux-store\";\r\n\r\n\r\ntype MessageType = {\r\n  id: number;\r\n  message: string;\r\n};\r\n\r\ntype DialogsType = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nlet initialState = {\r\n  messages: [\r\n    { id: 1, message: \"hi\" },\r\n    { id: 2, message: \"What da fuck!\" },\r\n    { id: 3, message: \"Esketit\" },\r\n  ] as Array<MessageType>,\r\n  dialogs: [\r\n    { id: 1, name: \"Lisa\" },\r\n    { id: 2, name: \"Vika\" },\r\n    { id: 3, name: \"Lilia\" },\r\n    { id: 4, name: \"Vlad\" },\r\n    { id: 5, name: \"Dima\" },\r\n  ] as Array<DialogsType>,\r\n};\r\n\r\nconst dialogsReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case \"dialogs/SEND-MESSAGE\":\r\n      return {\r\n        ...state,\r\n        messages: [\r\n          ...state.messages,\r\n          { id: state.messages.length + 1, message: action.newMessageBody },\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  sendMessageCreator: (newMessageBody: string) => ({type: \"dialogs/SEND-MESSAGE\", newMessageBody}),\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport type initialStateType = typeof initialState;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1-ST-\"};"],"sourceRoot":""}