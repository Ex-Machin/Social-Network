{"version":3,"sources":["components/FormsControl/FormControls.module.css","components/FormsControl/FormsControl.js","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.js","components/Dialogs/DialogItem/Dialog.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FromControl","input","meta","touched","error","children","hasError","className","styles","TextArea","props","restProps","child","Input","required","value","maxLengthCreator","maxLenght","length","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","name","path","s","dialog","active","to","Message","messageContent","message","maxLength50","AddReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","sendMessage","dialogs","dialogsItems","map","item","Dialog","id","messages","values","newMessageBody","compose","Component","RedirectComponent","this","React","connect"],"mappings":"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","file":"static/js/5.1b3d7e17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControls_form-control__pj4lY\",\"error\":\"FormControls_error__18c5z\",\"form-summary-error\":\"FormControls_form-summary-error__2S4wK\"};","import styles from \"./FormControls.module.css\";\n\nconst FromControl = ({ input, meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n\n  return (\n    <div className={styles[\"form-control\"] + \" \" + (hasError && styles.error)}>\n      <div>{children}</div>\n      <div>{hasError && <span> {error}</span>}</div>\n    </div>\n  );\n};\n\nexport const TextArea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FromControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FromControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FromControl {...props}>\n      <input {...input} {...restProps} />\n    </FromControl>\n  );\n};\n","export const required = (value) => {\n  if (!!value) {\n    return undefined;\n  }\n\n  return \"Field is required\";\n};\n\nexport const maxLengthCreator = (maxLenght) => (value) => {\n  if (value.length > maxLenght) {\n    return `Max length is ${maxLenght} symbols`;\n  }\n\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const WithAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\n\n      return <Component {...this.props} />;\n    }\n  }\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n","import React from 'react';\nimport s from \"../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = ({ name, path }) => {\n  return (\n    <div className={s.dialog + \" \" + s.active}>\n      <NavLink to={`/dialogs/${path}`}>{name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;","import React from \"react\";\nimport s from '../Dialogs.module.css';\n\nconst Message = ({ messageContent }) => {\n  return <div className={s.message}>{messageContent}</div>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\nimport { TextArea } from \"../FormsControl/FormsControl\";\nimport DialogItem from \"./DialogItem/Dialog\";\nimport s from \"./Dialogs.module.css\";\nimport Message from \"./Messages/Messages\";\n\nconst Dialogs = ({ dialogsPage, sendMessage }) => {\n\n  const addNewMessage = (values) => {\n    sendMessage(values.newMessageBody);\n  } \n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {dialogsPage.dialogs.map((item) => {\n          return <DialogItem key={item.id} name={item.name} path={item.id} />;\n        })}\n      </div>\n      <div className={s.messages}>\n        {dialogsPage.messages.map((item) => {\n          return <Message messageContent={item.message} key={item.id} />;\n        })}\n      </div>\n      <AddReduxMessageForm onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\nconst maxLength50 = maxLengthCreator(50); \n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={TextArea}\n          validate={[required, maxLength50]}\n          name=\"newMessageBody\"\n          placeholder=\"Enter your message\"\n        />\n      </div>\n      <div>\n        <button>Add Post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddReduxMessageForm = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { sendMessage } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n\nexport default compose(\n  WithAuthRedirect,\n  connect(mapStateToProps, {\n    sendMessage,\n  })\n)(Dialogs);\n"],"sourceRoot":""}