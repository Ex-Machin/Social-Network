{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/FormsControl/FormControls.module.css","components/FormsControl/FormsControl.js","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfielDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","FromControl","input","meta","touched","error","children","hasError","className","styles","TextArea","restProps","child","Input","required","value","maxLengthCreator","maxLenght","length","Post","message","likeCount","s","posts","item","src","alt","maxLength10","LoginReduxForm","reduxForm","form","handleSubmit","Field","name","component","placeholder","validate","type","MyPosts","postsData","addPost","postBlock","values","post","reverse","map","id","MyPostsContainer","connect","state","profilePage","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","onDoubleClick","ProfielDataFormReduxForm","profile","Object","keys","contacts","key","contact","ProfileData","isOwner","goEditMode","descriptionBlock","onClick","fullName","lookingForAJob","aboutMe","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","style","width","height","photos","large","userPhoto","target","files","initialValues","formData","then","Profile","content","ProfileContainer","userId","params","authorisedUserId","navigate","replace","getUser","getStatus","refreshProfile","prevState","snapshot","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/4.ebf32288.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControls_form-control__pj4lY\",\"error\":\"FormControls_error__18c5z\",\"form-summary-error\":\"FormControls_form-summary-error__2S4wK\"};","import styles from \"./FormControls.module.css\";\n\nconst FromControl = ({ input, meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n\n  return (\n    <div className={styles[\"form-control\"] + \" \" + (hasError && styles.error)}>\n      <div>{children}</div>\n      <div>{hasError && <span> {error}</span>}</div>\n    </div>\n  );\n};\n\nexport const TextArea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FromControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FromControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FromControl {...props}>\n      <input {...input} {...restProps} />\n    </FromControl>\n  );\n};\n","export const required = (value) => {\n  if (!!value) {\n    return undefined;\n  }\n\n  return \"Field is required\";\n};\n\nexport const maxLengthCreator = (maxLenght) => (value) => {\n  if (value.length > maxLenght) {\n    return `Max length is ${maxLenght} symbols`;\n  }\n\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"contact\":\"ProfileInfo_contact__1N3gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__R6Jlo\",\"postBlock\":\"MyPosts_postBlock__3b6E0\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1d730\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\n\nconst Post = ({ message, likeCount }) => {\n  return (\n    <div className={s.posts}>\n      <div className={s.item}>\n        <img\n          src=\"https://proslang.ru/wp-content/uploads/2019/03/avatarka_1-300x300.jpg\"\n          alt=\"\"\n        />\n        {message}\n      </div>\n      <div>\n        <span>likes: {likeCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, Form, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../FormsControl/FormsControl\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Posts/Post\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPostForm = ({handleSubmit}) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field\n        name=\"post\"\n        component={TextArea}\n        placeholder={\"Post a message\"}\n        validate={[required, maxLength10]}\n      />\n      <button type=\"submit\">Add Post</button>\n      <button>Remove</button>\n    </Form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  form: \"posts\",\n})(MyPostForm);\n\nconst MyPosts = ({ postsData, addPost }) => {\n\n  const onSubmit = (values) => {\n    addPost(values.post);\n  };\n\n  return (\n    <div className={s.postBlock}>\n      <h3>My Posts</h3>\n      <LoginReduxForm onSubmit={onSubmit} />\n      <div className={s.posts}>\n        {[...postsData].reverse().map((item) => {\n          return (\n            <Post\n              message={item.message}\n              likeCount={item.likeCount}\n              key={item.id}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { addPost } from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\n\nconst mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {\n  addPost,\n})(MyPosts);\n\nexport default MyPostsContainer;\n","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status])\n  \n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n  return (\n    <div>\n      {editMode ? (\n        <div>\n          <input\n            autoFocus\n            onChange={(e) => setStatus(e.currentTarget.value)}\n            value={status}\n            onBlur={deactivateEditMode}\n          ></input>\n        </div>\n      ) : (\n        <div>\n          <span onDoubleClick={() => setEditMode(true)}>\n            {status || \"--\"}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input, TextArea } from \"../../FormsControl/FormsControl\";\nimport s from \"./ProfileInfo.module.css\";\nimport styles from \"../../FormsControl/FormControls.module.css\";\n\nconst ProfielDataForm = ({ profile, handleSubmit, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <button>save</button>\n      </div>\n      {error && <div className={styles[\"form-summary-error\"]}>{error}</div>}\n      <div>\n        <b>Full name</b> :\n        <Field placeholder=\"Full name\" name=\"fullName\" component={Input} />\n      </div>\n      <div>\n        <b>Looking for a job </b>\n        <Field name=\"lookingForAJob\" component={Input} type={\"checkbox\"} />\n      </div>\n      <div>\n        <b>Skills </b>\n        <Field\n          placeholder=\"My professionals skills\"\n          name=\"lookingForAJobDescription\"\n          component={TextArea}\n        />\n      </div>\n      <div>About Me</div>\n      <Field name=\"aboutMe\" component={Input} />\n      <div>\n        <b>Contacts : </b>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key} className={s.contact}>\n              <b>{key}</b>\n              <Field name={\"contacts.\" + key} component={Input} />\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfielDataFormReduxForm = reduxForm({ form: \"editProfile\" })(\n  ProfielDataForm\n);\n\nexport default ProfielDataFormReduxForm;\n","import React, { useState } from \"react\";\nimport Preloader from \"../../Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport s from \"./ProfileInfo.module.css\";\nimport userPhoto from \"../../../assets/images/avatar.png\";\nimport ProfielDataForm from \"./ProfielDataForm\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n  const onSubmit =  (formData) => {\n   saveProfile(formData).then(() => setEditMode(false));\n  };\n\n  return (\n    <div>\n      <img\n        style={{ width: \"200px\", height: \"200px\" }}\n        src={profile.photos.large || userPhoto}\n        alt=\"\"\n      />\n      {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\n      {editMode ? (\n        <ProfielDataForm\n          initialValues={profile}\n          profile={profile}\n          onSubmit={onSubmit}\n        />\n      ) : (\n        <ProfileData\n          profile={profile}\n          isOwner={isOwner}\n          goEditMode={() => {\n            setEditMode(true);\n          }}\n        />\n      )}\n\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goEditMode }) => {\n  return (\n    <div className={s.descriptionBlock}>\n      {isOwner && <button onClick={goEditMode}>edit</button>}\n      <div>{profile.fullName}</div>\n      <div>\n        <b>Looking for a job </b>\n        {profile.lookingForAJob ? \"Yes\" : \"No\"}\n      </div>\n      <div>\n        About me <b>{profile.aboutMe}</b>\n      </div>\n      <div>\n        Job Description\n        <b>\n          {profile.lookingForAJob ? profile.lookingForAJobDescription : null}\n        </b>\n      </div>\n      <div>\n        <b>Contacts : </b>{\" \"}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport const Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={s.contact}>\n      <b>{contactTitle}</b>:{contactValue}\n    </div>\n  );\n};\n\n\nexport default ProfileInfo;\n","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\n\nconst Profile = (props) => {\n\n  return (\n    <div className={s.content}>\n      <ProfileInfo\n        profile={props.profile}\n        isOwner={props.isOwner}\n        savePhoto={props.savePhoto}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        saveProfile={props.saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"../../hoc/withRouter\";\nimport {\n  getStatus,\n  getUser,\n  updateStatus,\n  savePhoto,\n  saveProfile\n} from \"../../redux/profileReducer\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.params.id;\n    if (!userId) {\n      userId = this.props.authorisedUserId;\n      if (!userId) {\n        this.props.navigate(\"/login\", { replace: true });\n      }\n    }\n    if (userId) {\n      this.props.getUser(userId);\n      this.props.getStatus(userId);\n    }\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.params.id !== prevProps.params.id) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.params.id}\n        profile={this.props.profile}\n        savePhoto={this.props.savePhoto}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        saveProfile={this.props.saveProfile}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {\n    getUser,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n  })\n)(ProfileContainer);\n"],"sourceRoot":""}