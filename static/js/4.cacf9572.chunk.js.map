{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/FormsControl/FormControls.module.css","utils/validators/validators.js","components/FormsControl/FormsControl.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","required","value","maxLengthCreator","maxLenght","length","FromControl","input","meta","touched","error","children","hasError","className","styles","TextArea","restProps","child","Input","Post","message","likeCount","s","posts","item","src","alt","maxLength10","LoginReduxForm","reduxForm","form","handleSubmit","Field","name","component","placeholder","validate","type","MyPosts","postsData","addPost","postBlock","values","post","reverse","map","id","MyPostsContainer","connect","state","profilePage","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","descriptionBlock","fullName","photos","large","aboutMe","Preloader","Profile","content","ProfileContainer","userId","params","authorisedUserId","getUser","getStatus","navigate","replace","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/4.cacf9572.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControls_form-control__pj4lY\",\"error\":\"FormControls_error__18c5z\",\"form-summary-error\":\"FormControls_form-summary-error__2S4wK\"};","export const required = (value) => {\n  if (!!value) {\n    return undefined;\n  }\n\n  return \"Field is required\";\n};\n\nexport const maxLengthCreator = (maxLenght) => (value) => {\n  if (value.length > maxLenght) {\n    return `Max length is ${maxLenght} symbols`;\n  }\n\n  return undefined;\n};\n","import styles from \"./FormControls.module.css\";\n\nconst FromControl = ({ input, meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n\n  return (\n    <div className={styles[\"form-control\"] + \" \" + (hasError && styles.error)}>\n      <div>{children}</div>\n      <div>{hasError && <span> {error}</span>}</div>\n    </div>\n  );\n};\n\nexport const TextArea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FromControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FromControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FromControl {...props}>\n      <input {...input} {...restProps} />\n    </FromControl>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__R6Jlo\",\"postBlock\":\"MyPosts_postBlock__3b6E0\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1d730\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\n\nconst Post = ({ message, likeCount }) => {\n  return (\n    <div className={s.posts}>\n      <div className={s.item}>\n        <img\n          src=\"https://proslang.ru/wp-content/uploads/2019/03/avatarka_1-300x300.jpg\"\n          alt=\"\"\n        />\n        {message}\n      </div>\n      <div>\n        <span>likes: {likeCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, Form, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../FormsControl/FormsControl\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Posts/Post\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPostForm = ({handleSubmit}) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field\n        name=\"post\"\n        component={TextArea}\n        placeholder={\"Post a message\"}\n        validate={[required, maxLength10]}\n      />\n      <button type=\"submit\">Add Post</button>\n      <button>Remove</button>\n    </Form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  form: \"posts\",\n})(MyPostForm);\n\nconst MyPosts = ({ postsData, addPost }) => {\n\n  const onSubmit = (values) => {\n    addPost(values.post);\n  };\n\n  return (\n    <div className={s.postBlock}>\n      <h3>My Posts</h3>\n      <LoginReduxForm onSubmit={onSubmit} />\n      <div className={s.posts}>\n        {[...postsData].reverse().map((item) => {\n          return (\n            <Post\n              message={item.message}\n              likeCount={item.likeCount}\n              key={item.id}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { addPost } from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\n\nconst mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {\n  addPost,\n})(MyPosts);\n\nexport default MyPostsContainer;\n","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status])\n  \n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n  return (\n    <div>\n      {editMode ? (\n        <div>\n          <input\n            autoFocus\n            onChange={(e) => setStatus(e.currentTarget.value)}\n            value={status}\n            onBlur={deactivateEditMode}\n          ></input>\n        </div>\n      ) : (\n        <div>\n          <span onDoubleClick={() => setEditMode(true)}>\n            {status || \"--\"}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport Preloader from \"../../Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport s from \"./ProfileInfo.module.css\";\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <span>{profile.fullName}</span>\n        <img src={profile.photos.large} alt=\"\" />\n        <ProfileStatusWithHooks\n          status={status}\n          updateStatus={updateStatus}\n        />\n      </div>\n      <span>{profile.aboutMe}</span>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\n\nconst Profile = (props) => {\n\n  return (\n    <div className={s.content}>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"../../hoc/withRouter\";\nimport { getStatus, getUser, updateStatus } from \"../../redux/profileReducer\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.params.id;\n    if (!userId) {\n      userId = this.props.authorisedUserId;\n      if (!!userId) {\n        this.props.getUser(userId);\n        this.props.getStatus(userId);\n      } else {\n        this.props.navigate(\"/login\", { replace: true });\n      }\n    }\n  }\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { getUser, getStatus, updateStatus })\n)(ProfileContainer);\n"],"sourceRoot":""}